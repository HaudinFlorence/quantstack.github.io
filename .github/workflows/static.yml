# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: "open_the_popup_portrait_on_a_specific_page"
  pull_request:
    branches:
      - "open_the_popup_portrait_on_a_specific_page"

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages


# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
replace_string:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set environment variable for branch name
        env:
          BRANCH_NAME: ${{ github.ref_name }}
          REPO_NAME: ${{github.repository_name}}
          
        run: echo "Branch name is $BRANCH_NAME"

      - name: Replace 'BaseUrl' with branch name in file
        run: |
          sed -i "s/BaseUrl/${BRANCH_NAME}/g" docusaurus.config.ts
          
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install the dependencies
        run: npm ci
      - name: Build
        run: npm run build         
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./build

  deploy:
    needs: build, replace_string
    if: github.ref == 'refs/heads/open_the_popup_portrait_on_a_specific_page'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4